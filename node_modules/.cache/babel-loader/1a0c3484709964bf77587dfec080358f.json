{"remainingRequest":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/thread-loader/dist/cjs.js!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/babel-loader/lib/index.js!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vuetify/lib/components/VCalendar/mixins/calendar-with-intervals.js","dependencies":[{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vuetify/lib/components/VCalendar/mixins/calendar-with-intervals.js","mtime":1573188783386},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/cache-loader/dist/cjs.js","mtime":1550043000379},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/thread-loader/dist/cjs.js","mtime":1565426880658},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/babel-loader/lib/index.js","mtime":1561771806840}],"contextDependencies":[],"result":["// Mixins\nimport CalendarBase from './calendar-base'; // Util\n\nimport props from '../util/props';\nimport { parseTime, copyTimestamp, updateMinutes, createDayList, createIntervalList, createNativeLocaleFormatter } from '../util/timestamp';\n/* @vue/component */\n\nexport default CalendarBase.extend({\n  name: 'calendar-with-intervals',\n  props: props.intervals,\n  computed: {\n    parsedFirstInterval: function parsedFirstInterval() {\n      return parseInt(this.firstInterval);\n    },\n    parsedIntervalMinutes: function parsedIntervalMinutes() {\n      return parseInt(this.intervalMinutes);\n    },\n    parsedIntervalCount: function parsedIntervalCount() {\n      return parseInt(this.intervalCount);\n    },\n    parsedIntervalHeight: function parsedIntervalHeight() {\n      return parseFloat(this.intervalHeight);\n    },\n    firstMinute: function firstMinute() {\n      return this.parsedFirstInterval * this.parsedIntervalMinutes;\n    },\n    bodyHeight: function bodyHeight() {\n      return this.parsedIntervalCount * this.parsedIntervalHeight;\n    },\n    days: function days() {\n      return createDayList(this.parsedStart, this.parsedEnd, this.times.today, this.weekdaySkips, this.maxDays);\n    },\n    intervals: function intervals() {\n      var days = this.days;\n      var first = this.parsedFirstInterval;\n      var minutes = this.parsedIntervalMinutes;\n      var count = this.parsedIntervalCount;\n      var now = this.times.now;\n      return days.map(function (d) {\n        return createIntervalList(d, first, minutes, count, now);\n      });\n    },\n    intervalFormatter: function intervalFormatter() {\n      if (this.intervalFormat) {\n        return this.intervalFormat;\n      }\n\n      var longOptions = {\n        timeZone: 'UTC',\n        hour12: true,\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      var shortOptions = {\n        timeZone: 'UTC',\n        hour12: true,\n        hour: 'numeric',\n        minute: '2-digit'\n      };\n      var shortHourOptions = {\n        timeZone: 'UTC',\n        hour12: true,\n        hour: 'numeric'\n      };\n      return createNativeLocaleFormatter(this.currentLocale, function (tms, short) {\n        return short ? tms.minute === 0 ? shortHourOptions : shortOptions : longOptions;\n      });\n    }\n  },\n  methods: {\n    showIntervalLabelDefault: function showIntervalLabelDefault(interval) {\n      var first = this.intervals[0][0];\n      var isFirst = first.hour === interval.hour && first.minute === interval.minute;\n      return !isFirst && interval.minute === 0;\n    },\n    intervalStyleDefault: function intervalStyleDefault(_interval) {\n      return undefined;\n    },\n    getTimestampAtEvent: function getTimestampAtEvent(e, day) {\n      var timestamp = copyTimestamp(day);\n      var bounds = e.currentTarget.getBoundingClientRect();\n      var baseMinutes = this.firstMinute;\n      var touchEvent = e;\n      var mouseEvent = e;\n      var touches = touchEvent.changedTouches || touchEvent.touches;\n      var clientY = touches && touches[0] ? touches[0].clientY : mouseEvent.clientY;\n      var addIntervals = (clientY - bounds.top) / this.parsedIntervalHeight;\n      var addMinutes = Math.floor(addIntervals * this.parsedIntervalMinutes);\n      var minutes = baseMinutes + addMinutes;\n      return updateMinutes(timestamp, minutes, this.times.now);\n    },\n    getSlotScope: function getSlotScope(timestamp) {\n      var scope = copyTimestamp(timestamp);\n      scope.timeToY = this.timeToY;\n      scope.minutesToPixels = this.minutesToPixels;\n      return scope;\n    },\n    scrollToTime: function scrollToTime(time) {\n      var y = this.timeToY(time);\n      var pane = this.$refs.scrollArea;\n\n      if (y === false || !pane) {\n        return false;\n      }\n\n      pane.scrollTop = y;\n      return true;\n    },\n    minutesToPixels: function minutesToPixels(minutes) {\n      return minutes / this.parsedIntervalMinutes * this.parsedIntervalHeight;\n    },\n    timeToY: function timeToY(time) {\n      var clamp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var minutes = parseTime(time);\n\n      if (minutes === false) {\n        return false;\n      }\n\n      var min = this.firstMinute;\n      var gap = this.parsedIntervalCount * this.parsedIntervalMinutes;\n      var delta = (minutes - min) / gap;\n      var y = delta * this.bodyHeight;\n\n      if (clamp) {\n        if (y < 0) {\n          y = 0;\n        }\n\n        if (y > this.bodyHeight) {\n          y = this.bodyHeight;\n        }\n      }\n\n      return y;\n    }\n  }\n});",{"version":3,"sources":["../../../../src/components/VCalendar/mixins/calendar-with-intervals.ts"],"names":[],"mappings":"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","sourcesContent":["\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  VTime,\n  VTimestampFormatter,\n  parseTime,\n  copyTimestamp,\n  updateMinutes,\n  createDayList,\n  createIntervalList,\n  createNativeLocaleFormatter,\n} from '../util/timestamp'\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-intervals',\n\n  props: props.intervals,\n\n  computed: {\n    parsedFirstInterval (): number {\n      return parseInt(this.firstInterval)\n    },\n    parsedIntervalMinutes (): number {\n      return parseInt(this.intervalMinutes)\n    },\n    parsedIntervalCount (): number {\n      return parseInt(this.intervalCount)\n    },\n    parsedIntervalHeight (): number {\n      return parseFloat(this.intervalHeight)\n    },\n    firstMinute (): number {\n      return this.parsedFirstInterval * this.parsedIntervalMinutes\n    },\n    bodyHeight (): number {\n      return this.parsedIntervalCount * this.parsedIntervalHeight\n    },\n    days (): VTimestamp[] {\n      return createDayList(\n        this.parsedStart,\n        this.parsedEnd,\n        this.times.today,\n        this.weekdaySkips,\n        this.maxDays\n      )\n    },\n    intervals (): VTimestamp[][] {\n      const days: VTimestamp[] = this.days\n      const first: number = this.parsedFirstInterval\n      const minutes: number = this.parsedIntervalMinutes\n      const count: number = this.parsedIntervalCount\n      const now: VTimestamp = this.times.now\n\n      return days.map(d => createIntervalList(d, first, minutes, count, now))\n    },\n    intervalFormatter (): VTimestampFormatter {\n      if (this.intervalFormat) {\n        return this.intervalFormat as VTimestampFormatter\n      }\n\n      const longOptions = { timeZone: 'UTC', hour12: true, hour: '2-digit', minute: '2-digit' }\n      const shortOptions = { timeZone: 'UTC', hour12: true, hour: 'numeric', minute: '2-digit' }\n      const shortHourOptions = { timeZone: 'UTC', hour12: true, hour: 'numeric' }\n\n      return createNativeLocaleFormatter(\n        this.currentLocale,\n        (tms, short) => short ? (tms.minute === 0 ? shortHourOptions : shortOptions) : longOptions\n      )\n    },\n  },\n\n  methods: {\n    showIntervalLabelDefault (interval: VTimestamp): boolean {\n      const first: VTimestamp = this.intervals[0][0]\n      const isFirst: boolean = first.hour === interval.hour && first.minute === interval.minute\n      return !isFirst && interval.minute === 0\n    },\n    intervalStyleDefault (_interval: VTimestamp): object | undefined {\n      return undefined\n    },\n    getTimestampAtEvent (e: MouseEvent | TouchEvent, day: VTimestamp): VTimestamp {\n      const timestamp: VTimestamp = copyTimestamp(day)\n      const bounds = (e.currentTarget as HTMLElement).getBoundingClientRect()\n      const baseMinutes: number = this.firstMinute\n      const touchEvent: TouchEvent = e as TouchEvent\n      const mouseEvent: MouseEvent = e as MouseEvent\n      const touches: TouchList = touchEvent.changedTouches || touchEvent.touches\n      const clientY: number = touches && touches[0] ? touches[0].clientY : mouseEvent.clientY\n      const addIntervals: number = (clientY - bounds.top) / this.parsedIntervalHeight\n      const addMinutes: number = Math.floor(addIntervals * this.parsedIntervalMinutes)\n      const minutes: number = baseMinutes + addMinutes\n\n      return updateMinutes(timestamp, minutes, this.times.now)\n    },\n    getSlotScope (timestamp: VTimestamp): any {\n      const scope = copyTimestamp(timestamp) as any\n      scope.timeToY = this.timeToY\n      scope.minutesToPixels = this.minutesToPixels\n      return scope\n    },\n    scrollToTime (time: VTime): boolean {\n      const y = this.timeToY(time)\n      const pane = this.$refs.scrollArea as HTMLElement\n\n      if (y === false || !pane) {\n        return false\n      }\n\n      pane.scrollTop = y\n\n      return true\n    },\n    minutesToPixels (minutes: number): number {\n      return minutes / this.parsedIntervalMinutes * this.parsedIntervalHeight\n    },\n    timeToY (time: VTime, clamp = true): number | false {\n      const minutes = parseTime(time)\n\n      if (minutes === false) {\n        return false\n      }\n\n      const min: number = this.firstMinute\n      const gap: number = this.parsedIntervalCount * this.parsedIntervalMinutes\n      const delta: number = (minutes - min) / gap\n      let y: number = delta * this.bodyHeight\n\n      if (clamp) {\n        if (y < 0) {\n          y = 0\n        }\n        if (y > this.bodyHeight) {\n          y = this.bodyHeight\n        }\n      }\n\n      return y\n    },\n  },\n})\n"],"sourceRoot":""}]}