{"remainingRequest":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/babel-loader/lib/index.js!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vuetify-loader/lib/loader.js!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/src/components/Startform.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/src/components/Startform.vue","mtime":1582060958923},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/cache-loader/dist/cjs.js","mtime":1550043000379},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/babel-loader/lib/index.js","mtime":1561771806840},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vuetify-loader/lib/loader.js","mtime":1564535333024},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/cache-loader/dist/cjs.js","mtime":1550043000379},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vue-loader/lib/index.js","mtime":1573188785664}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { required, email, max } from 'vee-validate/dist/rules';\nimport { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate';\nsetInteractionMode('eager');\nextend('required', _objectSpread({}, required, {\n  message: 'Field can not be empty'\n}));\nextend('max', _objectSpread({}, max, {\n  message: 'The name field may not be greater than {length} characters'\n}));\nextend('email', _objectSpread({}, email, {\n  message: 'This field must be a valid email'\n}));\nextend('phone', _objectSpread({}, email, {\n  message: 'This field must be a valid email'\n}));\nexport default {\n  name: \"Startform\",\n  components: {\n    ValidationProvider: ValidationProvider,\n    ValidationObserver: ValidationObserver\n  },\n  data: function data() {\n    return {\n      name: '',\n      email: '',\n      select: null,\n      checkbox: null\n    };\n  },\n  methods: {\n    submit: function submit() {\n      this.$refs.observer.validate();\n    },\n    clear: function clear() {\n      this.name = '';\n      this.email = '';\n      this.phone = '';\n      this.company = '';\n      this.select = null;\n      this.checkbox = null;\n      this.$refs.observer.reset();\n    }\n  }\n};",{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["\r  import { required, email, max } from 'vee-validate/dist/rules'\r  import { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate'\r  \r  setInteractionMode('eager')\r  \r  extend('required', {\r    ...required,\r    message: 'Field can not be empty',\r  })\r  \r  extend('max', {\r    ...max,\r    message: 'The name field may not be greater than {length} characters',\r  })\r  \r  extend('email', {\r    ...email,\r    message: 'This field must be a valid email',\r  })\r\r  extend('phone', {\r    ...email,\r    message: 'This field must be a valid email',\r  })\r  \r  export default {\r    name: \"Startform\",\r    components: {\r      ValidationProvider,\r      ValidationObserver,\r    },\r    data: () => ({\r      name: '',\r      email: '',\r      select: null,\r      checkbox: null,\r    }),\r    \r    methods: {\r      submit () {\r        this.$refs.observer.validate()\r      },\r      clear () {\r        this.name = ''\r        this.email = ''\r        this.phone = ''\r        this.company = ''\r        this.select = null\r        this.checkbox = null\r        this.$refs.observer.reset()\r      },\r    },\r  }\r"],"sourceRoot":"src/components"}]}