{"remainingRequest":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/babel-loader/lib/index.js!/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vuetify/lib/services/icons/index.js","dependencies":[{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/vuetify/lib/services/icons/index.js","mtime":1573188783386},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/cache-loader/dist/cjs.js","mtime":1550043000379},{"path":"/Users/tigadmin/web/Webstorm-Projects/netsitesonline-com/nso/net/node_modules/babel-loader/lib/index.js","mtime":1561771806840}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// Extensions\nimport { Service } from '../service'; // Presets\n\nimport presets from './presets';\nexport var Icons =\n/*#__PURE__*/\nfunction (_Service) {\n  _inherits(Icons, _Service);\n\n  function Icons() {\n    var _this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Icons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Icons).call(this));\n    _this.iconfont = 'mdi';\n    _this.values = presets[_this.iconfont];\n    if (options.iconfont) _this.iconfont = options.iconfont;\n    _this.values = _objectSpread({}, presets[_this.iconfont], {}, options.values || {});\n    return _this;\n  }\n\n  return Icons;\n}(Service);\nIcons.property = 'icons';",{"version":3,"sources":["../../../src/services/icons/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA,SAAA,OAAA,QAAA,YAAA,C,CAKA;;AACA,OAAA,OAAA,MAAA,WAAA;AAEA,WAAM,KAAN;AAAA;AAAA;AAAA;;AAOE,mBAA0C;AAAA;;AAAA,QAA7B,OAA6B,uEAA1C,EAA0C;;AAAA;;AACxC;AALK,UAAA,QAAA,GAAA,KAAA;AAEA,UAAA,MAAA,GAA2B,OAAO,CAAC,MAAnC,QAAkC,CAAlC;AAIL,QAAI,OAAO,CAAX,QAAA,EAAsB,MAAA,QAAA,GAAgB,OAAO,CAAvB,QAAA;AAEtB,UAAA,MAAA,qBACK,OAAO,CAAC,MADC,QACF,CADZ,MAEM,OAAO,CAAP,MAAA,IAAJ,EAFF;AAJwC;AAQzC;;AAfH;AAAA,EAAM,OAAN;AACS,KAAA,CAAA,QAAA,GAAA,OAAA","sourcesContent":["// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { Icons as IIcons } from 'vuetify/types/services/icons'\n\n// Presets\nimport presets from './presets'\n\nexport class Icons extends Service implements IIcons {\n  static property = 'icons'\n\n  public iconfont: IIcons['iconfont'] = 'mdi'\n\n  public values: IIcons['values'] = presets[this.iconfont]\n\n  constructor (options: Partial<IIcons> = {}) {\n    super()\n    if (options.iconfont) this.iconfont = options.iconfont\n\n    this.values = {\n      ...presets[this.iconfont],\n      ...(options.values || {}),\n    }\n  }\n}\n"],"sourceRoot":""}]}