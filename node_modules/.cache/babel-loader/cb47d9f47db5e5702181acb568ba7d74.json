{"remainingRequest":"/Users/nsi/WebstormProjects/nso-2025-final/node_modules/babel-loader/lib/index.js!/Users/nsi/WebstormProjects/nso-2025-final/node_modules/vuetify/lib/components/VCalendar/mixins/calendar-with-events.js","dependencies":[{"path":"/Users/nsi/WebstormProjects/nso-2025-final/node_modules/vuetify/lib/components/VCalendar/mixins/calendar-with-events.js","mtime":1700005597744},{"path":"/Users/nsi/WebstormProjects/nso-2025-final/node_modules/cache-loader/dist/cjs.js","mtime":1700005595258},{"path":"/Users/nsi/WebstormProjects/nso-2025-final/node_modules/babel-loader/lib/index.js","mtime":1700005595170}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Styles\nimport \"../../../../src/components/VCalendar/mixins/calendar-with-events.sass\"; // Directives\n\nimport ripple from '../../../directives/ripple'; // Mixins\n\nimport CalendarBase from './calendar-base'; // Helpers\n\nimport { escapeHTML } from '../../../util/helpers'; // Util\n\nimport props from '../util/props';\nimport { getDayIdentifier, parseTime } from '../util/timestamp';\nimport { parseEvent, isEventOn } from '../util/events';\n/* @vue/component */\n\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n  directives: {\n    ripple: ripple\n  },\n  props: props.events,\n  computed: {\n    noEvents: function noEvents() {\n      return this.events.length === 0;\n    },\n    parsedEvents: function parsedEvents() {\n      var _this = this;\n\n      return this.events.map(function (input, index) {\n        return parseEvent(input, index, _this.eventStart, _this.eventEnd);\n      });\n    },\n    eventColorFunction: function eventColorFunction() {\n      var _this2 = this;\n\n      return typeof this.eventColor === 'function' ? this.eventColor : function () {\n        return _this2.eventColor;\n      };\n    },\n    eventTextColorFunction: function eventTextColorFunction() {\n      var _this3 = this;\n\n      return typeof this.eventTextColor === 'function' ? this.eventTextColor : function () {\n        return _this3.eventTextColor;\n      };\n    },\n    eventNameFunction: function eventNameFunction() {\n      var _this4 = this;\n\n      return typeof this.eventName === 'function' ? this.eventName : function (event, timedEvent) {\n        var name = escapeHTML(event.input[_this4.eventName]);\n\n        if (event.start.hasTime) {\n          if (timedEvent) {\n            var showStart = event.start.hour < 12 && event.end.hour >= 12;\n\n            var start = _this4.formatTime(event.start, showStart);\n\n            var end = _this4.formatTime(event.end, true);\n\n            return \"<strong>\".concat(name, \"</strong><br>\").concat(start, \" - \").concat(end);\n          } else {\n            var time = _this4.formatTime(event.start, true);\n\n            return \"<strong>\".concat(time, \"</strong> \").concat(name);\n          }\n        }\n\n        return name;\n      };\n    }\n  },\n  methods: {\n    formatTime: function formatTime(withTime, ampm) {\n      var suffix = ampm ? withTime.hour < 12 ? 'a' : 'p' : '';\n      var hour = withTime.hour % 12 || 12;\n      var minute = withTime.minute;\n      return minute > 0 ? minute < 10 ? \"\".concat(hour, \":0\").concat(minute).concat(suffix) : \"\".concat(hour, \":\").concat(minute).concat(suffix) : \"\".concat(hour).concat(suffix);\n    },\n    updateEventVisibility: function updateEventVisibility() {\n      if (this.noEvents || !this.eventMore) {\n        return;\n      }\n\n      var eventHeight = this.eventHeight;\n      var eventsMap = this.getEventsMap();\n\n      for (var date in eventsMap) {\n        var _eventsMap$date = eventsMap[date],\n            parent = _eventsMap$date.parent,\n            events = _eventsMap$date.events,\n            more = _eventsMap$date.more;\n\n        if (!more) {\n          break;\n        }\n\n        var parentBounds = parent.getBoundingClientRect();\n        var last = events.length - 1;\n        var hide = false;\n        var hidden = 0;\n\n        for (var i = 0; i <= last; i++) {\n          if (!hide) {\n            var eventBounds = events[i].getBoundingClientRect();\n            hide = eventBounds.bottom + eventHeight > parentBounds.bottom && i !== last || events[i].style.display === 'none';\n          }\n\n          if (hide) {\n            var id = events[i].getAttribute('data-event');\n            this.hideEvents(id);\n            hidden++;\n          }\n        }\n\n        if (hide) {\n          more.style.display = '';\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden);\n        } else {\n          more.style.display = 'none';\n        }\n      }\n    },\n    hideEvents: function hideEvents(id) {\n      var elements = this.$refs.events;\n      elements.forEach(function (el) {\n        if (el.getAttribute('data-event') === id) {\n          el.style.display = 'none';\n        }\n      });\n    },\n    getEventsMap: function getEventsMap() {\n      var eventsMap = {};\n      var elements = this.$refs.events;\n\n      if (!elements || !elements.forEach) {\n        return eventsMap;\n      }\n\n      elements.forEach(function (el) {\n        var date = el.getAttribute('data-date');\n\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: []\n            };\n          }\n\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el;\n          } else {\n            eventsMap[date].events.push(el);\n            el.style.display = '';\n          }\n        }\n      });\n      return eventsMap;\n    },\n    genDayEvent: function genDayEvent(_ref, index, day) {\n      var offset = _ref.offset,\n          event = _ref.event;\n      var eventHeight = this.eventHeight;\n      var eventMarginBottom = this.eventMarginBottom;\n      var relativeOffset = (offset - index) * (eventHeight + eventMarginBottom); // 1 = margin bottom\n\n      var dayIdentifier = getDayIdentifier(day);\n      var start = dayIdentifier === event.startIdentifier;\n      var end = dayIdentifier === event.endIdentifier;\n      var scope = {\n        event: event.input,\n        day: day,\n        outside: day.outside,\n        start: start,\n        end: end,\n        timed: false\n      };\n      return this.genEvent(event, scope, start || day.index === 0, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end\n        },\n        style: {\n          height: \"\".concat(eventHeight, \"px\"),\n          top: \"\".concat(relativeOffset, \"px\"),\n          'margin-bottom': \"\".concat(eventMarginBottom, \"px\")\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-event': event.index\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true\n      });\n    },\n    genTimedEvent: function genTimedEvent(_ref2, index, day) {\n      var offset = _ref2.offset,\n          event = _ref2.event,\n          columnCount = _ref2.columnCount,\n          column = _ref2.column;\n      var dayIdentifier = getDayIdentifier(day);\n      var start = event.startIdentifier >= dayIdentifier;\n      var end = event.endIdentifier > dayIdentifier;\n      var top = start ? day.timeToY(event.start) : 0;\n      var bottom = end ? day.timeToY(1440) : day.timeToY(event.end);\n      var height = Math.max(this.eventHeight, bottom - top);\n      var left = columnCount === -1 ? offset * 5 : column * 100 / columnCount;\n      var right = columnCount === -1 ? 0 : Math.max(0, (columnCount - column - 2) * 100 / columnCount + 10);\n      var scope = {\n        event: event.input,\n        day: day,\n        outside: day.outside,\n        start: start,\n        end: end,\n        timed: true\n      };\n      return this.genEvent(event, scope, true, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: \"\".concat(top, \"px\"),\n          height: \"\".concat(height, \"px\"),\n          left: \"\".concat(left, \"%\"),\n          right: \"\".concat(right, \"%\")\n        }\n      });\n    },\n    genEvent: function genEvent(event, scope, showName, timedEvent, data) {\n      var slot = this.$scopedSlots.event;\n      var text = this.eventTextColorFunction(event.input);\n      var background = this.eventColorFunction(event.input);\n      return this.$createElement('div', this.setTextColor(text, this.setBackgroundColor(background, _objectSpread({\n        on: this.getDefaultMouseEventHandlers(':event', function (nativeEvent) {\n          return _objectSpread({}, scope, {\n            nativeEvent: nativeEvent\n          });\n        }),\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true\n        }]\n      }, data))), slot ? slot(scope) : showName ? [this.genName(event, timedEvent)] : undefined);\n    },\n    genName: function genName(event, timedEvent) {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: this.eventNameFunction(event, timedEvent)\n        }\n      });\n    },\n    genMore: function genMore(day) {\n      var _this5 = this;\n\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true\n        }],\n        on: {\n          click: function click() {\n            return _this5.$emit('click:more', day);\n          }\n        },\n        style: {\n          display: 'none'\n        },\n        ref: 'events',\n        refInFor: true\n      });\n    },\n    getEventsForDay: function getEventsForDay(day) {\n      var identifier = getDayIdentifier(day);\n      return this.parsedEvents.filter(function (event) {\n        return isEventOn(event, identifier);\n      });\n    },\n    getEventsForDayAll: function getEventsForDayAll(day) {\n      var identifier = getDayIdentifier(day);\n      return this.parsedEvents.filter(function (event) {\n        return event.allDay && isEventOn(event, identifier);\n      });\n    },\n    getEventsForDayTimed: function getEventsForDayTimed(day) {\n      var identifier = getDayIdentifier(day);\n      return this.parsedEvents.filter(function (event) {\n        return !event.allDay && isEventOn(event, identifier);\n      });\n    },\n    isSameColumn: function isSameColumn(a, b) {\n      var astart = parseTime(a.event.start);\n      var bstart = parseTime(b.event.start);\n      var diff = astart - bstart;\n      var abs = diff < 0 ? -diff : diff;\n      return abs < this.eventOverlapThreshold;\n    },\n    isOverlapping: function isOverlapping(a, b) {\n      var astart = parseTime(a.event.start);\n      var bstart = parseTime(b.event.start);\n\n      if (a.offset < b.offset && bstart < astart) {\n        var aend = astart + this.eventOverlapThreshold;\n        var bend = parseTime(b.event.end);\n        return !(astart >= bend || aend <= bstart);\n      }\n\n      return false;\n    },\n    getScopedSlots: function getScopedSlots() {\n      var _this6 = this;\n\n      if (this.noEvents) {\n        return this.$scopedSlots;\n      }\n      /**\n       * Over the span of a week (for example) we want to maintain an event in the same row (for weekly and monthly views).\n       * We keep track of those rows by indexToOffset. If the value in that array is -1, then we can place an event at that spot.\n       * For a daily view with timed events we arrange them based on columns and offsets. If two or more events start at around the\n       * same time (eventOverlapThreshold) they go into columns. If one event starts inside another it is indented the appropriate amount.\n       * If one event overlaps another after those adjustments are made those events are placed in columns together instead of any defined\n       * indents.\n       */\n\n\n      var parsedEvents = this.parsedEvents;\n      var indexToOffset = parsedEvents.map(function (event) {\n        return -1;\n      });\n      var resetOnWeekday = this.weekdays[0];\n\n      var checkReset = function checkReset(day) {\n        if (day.weekday === resetOnWeekday) {\n          for (var i = 0; i < indexToOffset.length; i++) {\n            indexToOffset[i] = -1;\n          }\n        }\n      };\n\n      var getOffset = function getOffset(visual, visuals) {\n        var offset = indexToOffset[visual.event.index];\n\n        if (offset === -1) {\n          var min = Number.MAX_SAFE_INTEGER;\n          var max = -1;\n          visuals.forEach(function (other) {\n            var otherOffset = indexToOffset[other.event.index];\n\n            if (otherOffset !== -1) {\n              min = Math.min(min, otherOffset);\n              max = Math.max(max, otherOffset);\n            }\n          });\n          offset = min > 0 && max !== -1 ? min - 1 : max + 1;\n          indexToOffset[visual.event.index] = offset;\n        }\n\n        return offset;\n      };\n\n      var getVisuals = function getVisuals(events, timed) {\n        var visuals = events.map(function (event) {\n          return {\n            event: event,\n            offset: 0,\n            columnCount: -1,\n            column: -1\n          };\n        }); // sort events by start date/time\n\n        visuals.sort(function (a, b) {\n          return a.event.startTimestampIdentifier - b.event.startTimestampIdentifier;\n        });\n\n        if (timed) {\n          // timed events can be organized into columns\n          visuals.forEach(function (visual) {\n            if (visual.columnCount !== -1) {\n              return;\n            }\n\n            var columns = [];\n            visuals.forEach(function (other) {\n              if (other.columnCount === -1 && _this6.isSameColumn(visual, other)) {\n                columns.push(other);\n              }\n            });\n\n            if (columns.length > 1) {\n              columns.forEach(function (visual, visualIndex) {\n                visual.column = visualIndex;\n                visual.columnCount = columns.length;\n              });\n            }\n          }); // for any not organized into columns, if they overlap another event\n          // not in a column they are offset\n\n          visuals.forEach(function (visual) {\n            if (visual.columnCount === -1) {\n              visuals.forEach(function (other) {\n                var otherOffset = indexToOffset[other.event.index];\n\n                if (otherOffset !== -1 && other.event.endTimestampIdentifier <= visual.event.startTimestampIdentifier) {\n                  indexToOffset[other.event.index] = -1;\n                }\n              });\n              visual.offset = getOffset(visual, visuals);\n            }\n          }); // for any not organized into columns, if a previous event overlaps this event\n          // join them into the columns\n\n          visuals.forEach(function (visual) {\n            if (visual.columnCount === -1) {\n              var columns = [visual];\n              visuals.forEach(function (other) {\n                if (other !== visual && other.columnCount === -1 && _this6.isOverlapping(visual, other)) {\n                  columns.push(other);\n                }\n              });\n\n              if (columns.length > 1) {\n                columns.forEach(function (visual, visualIndex) {\n                  visual.column = visualIndex;\n                  visual.columnCount = columns.length;\n                });\n              }\n            }\n          });\n        } else {\n          visuals.forEach(function (visual) {\n            visual.offset = getOffset(visual, visuals);\n          });\n        }\n\n        visuals.sort(function (a, b) {\n          return a.offset - b.offset || a.column - b.column;\n        });\n        return visuals;\n      };\n\n      var getSlotChildren = function getSlotChildren(day, getter, mapper, timed) {\n        checkReset(day);\n        var events = getter(day);\n        return events.length === 0 ? undefined : getVisuals(events, timed).map(function (visual, index) {\n          return mapper(visual, index, day);\n        });\n      };\n\n      return _objectSpread({}, this.$scopedSlots, {\n        day: function day(_day) {\n          var children = getSlotChildren(_day, _this6.getEventsForDay, _this6.genDayEvent, false);\n\n          if (children && children.length > 0 && _this6.eventMore) {\n            children.push(_this6.genMore(_day));\n          }\n\n          return children;\n        },\n        'day-header': function dayHeader(day) {\n          return getSlotChildren(day, _this6.getEventsForDayAll, _this6.genDayEvent, false);\n        },\n        'day-body': function dayBody(day) {\n          return [_this6.$createElement('div', {\n            staticClass: 'v-event-timed-container'\n          }, getSlotChildren(day, _this6.getEventsForDayTimed, _this6.genTimedEvent, true))];\n        }\n      });\n    }\n  }\n});",{"version":3,"sources":["../../../../src/components/VCalendar/mixins/calendar-with-events.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './calendar-with-events.sass'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n// Directives\nimport ripple from '../../../directives/ripple'\n\n// Mixins\nimport CalendarBase from './calendar-base'\n\n// Helpers\nimport { escapeHTML } from '../../../util/helpers'\n\n// Util\nimport props from '../util/props'\nimport {\n  VTimestamp,\n  getDayIdentifier,\n  parseTime,\n} from '../util/timestamp'\nimport {\n  VEventParsed,\n  VEventInput,\n  parseEvent,\n  isEventOn,\n} from '../util/events'\n\n// Types\ntype VColorFunction = (event: VEventInput) => string\n\ntype VNameFunction = (event: VEventParsed, timedEvent: boolean) => string\n\ntype VTimeToY = (time: VTimestamp | number | string) => number\n\ntype VEventResetCheck = (date: VTimestamp) => void\n\ntype VEventVisualGetOffset = (visual: VEventVisual, visuals: VEventVisual[]) => number\n\ntype VEventGetter = (day: VTimestamp) => VEventParsed[]\n\ntype VEventVisualGetter = (events: VEventParsed[], timed: boolean) => VEventVisual[]\n\ntype VEventVisualToNode<D> = (visual: VEventVisual, index: number, day: D) => VNode\n\ntype VDailyEventsMap = {\n  [date: string]: {\n    parent: HTMLElement\n    more: HTMLElement | null\n    events: HTMLElement[]\n  }\n}\n\ninterface VEventVisual {\n  offset: number\n  event: VEventParsed\n  columnCount: number\n  column: number\n}\n\ninterface VDaySlotScope extends VTimestamp {\n  outside: boolean\n  index: number\n}\n\ninterface VDayBodySlotScope extends VDaySlotScope {\n  timeToY: VTimeToY\n}\n\n/* @vue/component */\nexport default CalendarBase.extend({\n  name: 'calendar-with-events',\n\n  directives: {\n    ripple,\n  },\n\n  props: props.events,\n\n  computed: {\n    noEvents (): boolean {\n      return this.events.length === 0\n    },\n    parsedEvents (): VEventParsed[] {\n      return this.events.map((input, index) => parseEvent(input, index, this.eventStart, this.eventEnd))\n    },\n    eventColorFunction (): VColorFunction {\n      return typeof this.eventColor === 'function'\n        ? this.eventColor as VColorFunction\n        : () => (this.eventColor as string)\n    },\n    eventTextColorFunction (): VColorFunction {\n      return typeof this.eventTextColor === 'function'\n        ? this.eventTextColor as VColorFunction\n        : () => (this.eventTextColor as string)\n    },\n    eventNameFunction (): VNameFunction {\n      return typeof this.eventName === 'function'\n        ? this.eventName as VNameFunction\n        : (event, timedEvent) => {\n          const name = escapeHTML(event.input[this.eventName as string] as string)\n          if (event.start.hasTime) {\n            if (timedEvent) {\n              const showStart = event.start.hour < 12 && event.end.hour >= 12\n              const start = this.formatTime(event.start, showStart)\n              const end = this.formatTime(event.end, true)\n              return `<strong>${name}</strong><br>${start} - ${end}`\n            } else {\n              const time = this.formatTime(event.start, true)\n              return `<strong>${time}</strong> ${name}`\n            }\n          }\n          return name\n        }\n    },\n  },\n\n  methods: {\n    formatTime (withTime: VTimestamp, ampm: boolean): string {\n      const suffix = ampm ? (withTime.hour < 12 ? 'a' : 'p') : ''\n      const hour = withTime.hour % 12 || 12\n      const minute = withTime.minute\n\n      return minute > 0\n        ? (minute < 10\n          ? `${hour}:0${minute}${suffix}`\n          : `${hour}:${minute}${suffix}`)\n        : `${hour}${suffix}`\n    },\n    updateEventVisibility () {\n      if (this.noEvents || !this.eventMore) {\n        return\n      }\n\n      const eventHeight = this.eventHeight\n      const eventsMap = this.getEventsMap()\n\n      for (const date in eventsMap) {\n        const { parent, events, more } = eventsMap[date]\n        if (!more) {\n          break\n        }\n        const parentBounds = parent.getBoundingClientRect()\n        const last = events.length - 1\n        let hide = false\n        let hidden = 0\n        for (let i = 0; i <= last; i++) {\n          if (!hide) {\n            const eventBounds = events[i].getBoundingClientRect()\n            hide = (eventBounds.bottom + eventHeight > parentBounds.bottom && i !== last) ||\n                   events[i].style.display === 'none'\n          }\n          if (hide) {\n            const id = events[i].getAttribute('data-event') as string\n            this.hideEvents(id)\n            hidden++\n          }\n        }\n\n        if (hide) {\n          more.style.display = ''\n          more.innerHTML = this.$vuetify.lang.t(this.eventMoreText, hidden)\n        } else {\n          more.style.display = 'none'\n        }\n      }\n    },\n    hideEvents (id: string) {\n      const elements = this.$refs.events as HTMLElement[]\n\n      elements.forEach(el => {\n        if (el.getAttribute('data-event') === id) {\n          el.style.display = 'none'\n        }\n      })\n    },\n    getEventsMap (): VDailyEventsMap {\n      const eventsMap: VDailyEventsMap = {}\n      const elements = this.$refs.events as HTMLElement[]\n\n      if (!elements || !elements.forEach) {\n        return eventsMap\n      }\n\n      elements.forEach(el => {\n        const date = el.getAttribute('data-date')\n        if (el.parentElement && date) {\n          if (!(date in eventsMap)) {\n            eventsMap[date] = {\n              parent: el.parentElement,\n              more: null,\n              events: [],\n            }\n          }\n          if (el.getAttribute('data-more')) {\n            eventsMap[date].more = el\n          } else {\n            eventsMap[date].events.push(el)\n            el.style.display = ''\n          }\n        }\n      })\n\n      return eventsMap\n    },\n    genDayEvent ({ offset, event }: VEventVisual, index: number, day: VDaySlotScope): VNode {\n      const eventHeight = this.eventHeight\n      const eventMarginBottom = this.eventMarginBottom\n      const relativeOffset = (offset - index) * (eventHeight + eventMarginBottom) // 1 = margin bottom\n      const dayIdentifier = getDayIdentifier(day)\n      const start = dayIdentifier === event.startIdentifier\n      const end = dayIdentifier === event.endIdentifier\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: false }\n\n      return this.genEvent(event, scope, start || day.index === 0, false, {\n        staticClass: 'v-event',\n        class: {\n          'v-event-start': start,\n          'v-event-end': end,\n        },\n        style: {\n          height: `${eventHeight}px`,\n          top: `${relativeOffset}px`,\n          'margin-bottom': `${eventMarginBottom}px`,\n        },\n        attrs: {\n          'data-date': day.date,\n          'data-event': event.index,\n        },\n        key: event.index,\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    genTimedEvent ({ offset, event, columnCount, column }: VEventVisual, index: number, day: VDayBodySlotScope): VNode {\n      const dayIdentifier = getDayIdentifier(day)\n      const start = event.startIdentifier >= dayIdentifier\n      const end = event.endIdentifier > dayIdentifier\n      const top = start ? day.timeToY(event.start) : 0\n      const bottom = end ? day.timeToY(1440) : day.timeToY(event.end)\n      const height = Math.max(this.eventHeight, bottom - top)\n      const left = columnCount === -1\n        ? offset * 5\n        : column * 100 / columnCount\n      const right = columnCount === -1\n        ? 0\n        : Math.max(0, (columnCount - column - 2) * 100 / columnCount + 10)\n      const scope = { event: event.input, day, outside: day.outside, start, end, timed: true }\n\n      return this.genEvent(event, scope, true, true, {\n        staticClass: 'v-event-timed',\n        style: {\n          top: `${top}px`,\n          height: `${height}px`,\n          left: `${left}%`,\n          right: `${right}%`,\n        },\n      })\n    },\n    genEvent (event: VEventParsed, scope: object, showName: boolean, timedEvent: boolean, data: VNodeData): VNode {\n      const slot = this.$scopedSlots.event\n      const text = this.eventTextColorFunction(event.input)\n      const background = this.eventColorFunction(event.input)\n\n      return this.$createElement('div',\n        this.setTextColor(text,\n          this.setBackgroundColor(background, {\n            on: this.getDefaultMouseEventHandlers(':event', nativeEvent => ({ ...scope, nativeEvent })),\n            directives: [{\n              name: 'ripple',\n              value: this.eventRipple != null ? this.eventRipple : true,\n            }],\n            ...data,\n          })\n        ), slot\n          ? slot(scope)\n          : (showName ? [this.genName(event, timedEvent)] : undefined)\n      )\n    },\n    genName (event: VEventParsed, timedEvent: boolean): VNode {\n      return this.$createElement('div', {\n        staticClass: 'pl-1',\n        domProps: {\n          innerHTML: this.eventNameFunction(event, timedEvent),\n        },\n      })\n    },\n    genMore (day: VTimestamp): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-event-more pl-1',\n        attrs: {\n          'data-date': day.date,\n          'data-more': 1,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.eventRipple != null ? this.eventRipple : true,\n        }],\n        on: {\n          click: () => this.$emit('click:more', day),\n        },\n        style: {\n          display: 'none',\n        },\n        ref: 'events',\n        refInFor: true,\n      })\n    },\n    getEventsForDay (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayAll (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => event.allDay && isEventOn(event, identifier)\n      )\n    },\n    getEventsForDayTimed (day: VTimestamp): VEventParsed[] {\n      const identifier = getDayIdentifier(day)\n\n      return this.parsedEvents.filter(\n        event => !event.allDay && isEventOn(event, identifier)\n      )\n    },\n    isSameColumn (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n      const diff = astart - bstart\n      const abs = diff < 0 ? -diff : diff\n\n      return abs < this.eventOverlapThreshold\n    },\n    isOverlapping (a: VEventVisual, b: VEventVisual): boolean {\n      const astart = parseTime(a.event.start) as number\n      const bstart = parseTime(b.event.start) as number\n\n      if (a.offset < b.offset && bstart < astart) {\n        const aend = astart + this.eventOverlapThreshold\n        const bend = parseTime(b.event.end) as number\n        return !(astart >= bend || aend <= bstart)\n      }\n\n      return false\n    },\n    getScopedSlots () {\n      if (this.noEvents) {\n        return this.$scopedSlots\n      }\n\n      /**\n       * Over the span of a week (for example) we want to maintain an event in the same row (for weekly and monthly views).\n       * We keep track of those rows by indexToOffset. If the value in that array is -1, then we can place an event at that spot.\n       * For a daily view with timed events we arrange them based on columns and offsets. If two or more events start at around the\n       * same time (eventOverlapThreshold) they go into columns. If one event starts inside another it is indented the appropriate amount.\n       * If one event overlaps another after those adjustments are made those events are placed in columns together instead of any defined\n       * indents.\n       */\n\n      const parsedEvents = this.parsedEvents\n      const indexToOffset: number[] = parsedEvents.map(event => -1)\n      const resetOnWeekday = this.weekdays[0]\n\n      const checkReset: VEventResetCheck = day => {\n        if (day.weekday === resetOnWeekday) {\n          for (let i = 0; i < indexToOffset.length; i++) {\n            indexToOffset[i] = -1\n          }\n        }\n      }\n\n      const getOffset: VEventVisualGetOffset = (visual, visuals) => {\n        let offset = indexToOffset[visual.event.index]\n        if (offset === -1) {\n          let min = Number.MAX_SAFE_INTEGER\n          let max = -1\n          visuals.forEach(other => {\n            const otherOffset = indexToOffset[other.event.index]\n            if (otherOffset !== -1) {\n              min = Math.min(min, otherOffset)\n              max = Math.max(max, otherOffset)\n            }\n          })\n          offset = min > 0 && max !== -1 ? min - 1 : max + 1\n          indexToOffset[visual.event.index] = offset\n        }\n        return offset\n      }\n\n      const getVisuals: VEventVisualGetter = (events, timed) => {\n        const visuals: VEventVisual[] = events.map(event => ({ event, offset: 0, columnCount: -1, column: -1 }))\n        // sort events by start date/time\n        visuals.sort((a, b) => a.event.startTimestampIdentifier - b.event.startTimestampIdentifier)\n        if (timed) {\n          // timed events can be organized into columns\n          visuals.forEach(visual => {\n            if (visual.columnCount !== -1) {\n              return\n            }\n            const columns: VEventVisual[] = []\n            visuals.forEach(other => {\n              if (other.columnCount === -1 && this.isSameColumn(visual, other)) {\n                columns.push(other)\n              }\n            })\n            if (columns.length > 1) {\n              columns.forEach((visual, visualIndex) => {\n                visual.column = visualIndex\n                visual.columnCount = columns.length\n              })\n            }\n          })\n          // for any not organized into columns, if they overlap another event\n          // not in a column they are offset\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              visuals.forEach(other => {\n                const otherOffset = indexToOffset[other.event.index]\n                if (otherOffset !== -1 && other.event.endTimestampIdentifier <= visual.event.startTimestampIdentifier) {\n                  indexToOffset[other.event.index] = -1\n                }\n              })\n              visual.offset = getOffset(visual, visuals)\n            }\n          })\n          // for any not organized into columns, if a previous event overlaps this event\n          // join them into the columns\n          visuals.forEach(visual => {\n            if (visual.columnCount === -1) {\n              const columns: VEventVisual[] = [visual]\n              visuals.forEach(other => {\n                if (other !== visual && other.columnCount === -1 && this.isOverlapping(visual, other)) {\n                  columns.push(other)\n                }\n              })\n              if (columns.length > 1) {\n                columns.forEach((visual, visualIndex) => {\n                  visual.column = visualIndex\n                  visual.columnCount = columns.length\n                })\n              }\n            }\n          })\n        } else {\n          visuals.forEach(visual => {\n            visual.offset = getOffset(visual, visuals)\n          })\n        }\n        visuals.sort((a, b) => (a.offset - b.offset) || (a.column - b.column))\n        return visuals\n      }\n\n      const getSlotChildren = <D extends VDaySlotScope>(day: D, getter: VEventGetter, mapper: VEventVisualToNode<D>, timed: boolean) => {\n        checkReset(day)\n        const events = getter(day)\n        return events.length === 0\n          ? undefined\n          : getVisuals(events, timed).map((visual, index) => mapper(visual, index, day))\n      }\n\n      return {\n        ...this.$scopedSlots,\n        day: (day: VDaySlotScope) => {\n          const children = getSlotChildren(day, this.getEventsForDay, this.genDayEvent, false)\n          if (children && children.length > 0 && this.eventMore) {\n            children.push(this.genMore(day))\n          }\n          return children\n        },\n        'day-header': (day: VDaySlotScope) => {\n          return getSlotChildren(day, this.getEventsForDayAll, this.genDayEvent, false)\n        },\n        'day-body': (day: VDayBodySlotScope) => {\n          return [this.$createElement('div', {\n            staticClass: 'v-event-timed-container',\n          }, getSlotChildren(day, this.getEventsForDayTimed, this.genTimedEvent, true))]\n        },\n      }\n    },\n  },\n})\n"],"sourceRoot":""}]}